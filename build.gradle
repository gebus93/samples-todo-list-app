plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'pl.thinkandcode.samples.todo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	archUnitVersion = "0.23.1"
	testcontainersVersion = "1.16.3"
	nimbusVersion = "9.21"
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.nimbusds:nimbus-jose-jwt:${nimbusVersion}")

	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

	testImplementation("com.tngtech.archunit:archunit-junit5:${archUnitVersion}")
	testImplementation("org.testcontainers:testcontainers:${testcontainersVersion}")
	testImplementation("org.testcontainers:junit-jupiter:${testcontainersVersion}")
	testImplementation("org.testcontainers:mongodb:${testcontainersVersion}")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
}

tasks.named('test') {
	useJUnitPlatform() {
		excludeTags "architecture"
		excludeTags "integration"
		excludeTags "contract"
		excludeTags "component"
	}
	testLogging {
		events "passed", "skipped", "failed"
	}
}

def architectureTest = tasks.register("architectureTest", Test) {
	useJUnitPlatform {
		includeTags "architecture"
	}
	testLogging {
		events "passed", "skipped", "failed"
	}
	shouldRunAfter test
}


def contractTest = tasks.register("contractTest", Test) {
	useJUnitPlatform {
		includeTags "contract"
	}
	testLogging {
		events "passed", "skipped", "failed"
	}
	shouldRunAfter architectureTest
}

def integrationTest = tasks.register("integrationTest", Test) {
	useJUnitPlatform {
		includeTags "integration"
	}
	testLogging {
		events "passed", "skipped", "failed"
	}
	shouldRunAfter contractTest
}

def componentTest = tasks.register("componentTest", Test) {
	useJUnitPlatform {
		includeTags "component"
	}
	testLogging {
		events "passed", "skipped", "failed"
	}
	shouldRunAfter integrationTest
}

tasks.named("check") {
	dependsOn architectureTest
	dependsOn contractTest
	dependsOn integrationTest
	dependsOn componentTest
}
